{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Codebraid \u2013 live code in Pandoc Markdown Create dynamic documents by executing code blocks and inline code in Pandoc Markdown. Execute code with Jupyter kernels or with the extensible built-in execution system. Display Jupyter rich output like plots and LaTeX math in both block and inline contexts. Write pure Pandoc Markdown\u2014no custom syntax or separate preprocessing stage. Mix languages freely\u2014use multiple language kernels within the same document and multiple independent sessions per kernel. Customize the display of code output\u2014easily modify what is displayed, and display it anywhere in the document using literate programming capabilities. Preview documents in VS Code or VSCodium with a dedicated extension supporting scroll sync. --- codebraid: jupyter: true --- ## Jupyter demo An example with Matplotlib: ```{.python .cb-nb} %matplotlib inline import matplotlib.pyplot as plt import numpy as np x = np.linspace(0, 10, 1001) plt.plot(x, np.cos(2*x)) plt.plot(x, 3*np.sin(x)) plt.grid() ``` Jupyter demo An example with Matplotlib: %matplotlib inline import matplotlib.pyplot as plt import numpy as np x = np.linspace(0, 10, 1001) plt.plot(x, np.cos(2*x)) plt.plot(x, 3*np.sin(x)) plt.grid() Example documents The documents below demonstrate Codebraid capabilities. For more advanced features, see the end of the Python and Rust examples. Python example [ Pandoc Markdown source ] [ raw HTML output ] Jupyter example [ Pandoc Markdown source ] [ raw HTML output ] Rust example [ Pandoc Markdown source ] [ raw HTML output ] Julia example [ Pandoc Markdown source ] [ raw HTML output ] R example [ Pandoc Markdown source ] [ raw HTML output ] Bash example [ Pandoc Markdown source ] [ raw HTML output ] JavaScript example [ Pandoc Markdown source ] [ raw HTML output ] Publications \u201cCodebraid: Live Code in Pandoc Markdown\u201d , Geoffrey M. Poore, Proceedings of the 18th Python in Science Conference, 2019, 54-61. \u201cCodebraid Preview for VS Code: Pandoc Markdown Preview with Jupyter Kernels\u201d , Geoffrey M. Poore, Proceedings of the 21st Python in Science Conference, 2022, 105-109. External resources The new Codebraid website is currently under development. For additional Codebraid documentation, see the README . For additional Codebraid Preview documentation, see the README or the presentation for SciPy 2022 .","title":"Home"},{"location":"#codebraid-live-code-in-pandoc-markdown","text":"Create dynamic documents by executing code blocks and inline code in Pandoc Markdown. Execute code with Jupyter kernels or with the extensible built-in execution system. Display Jupyter rich output like plots and LaTeX math in both block and inline contexts. Write pure Pandoc Markdown\u2014no custom syntax or separate preprocessing stage. Mix languages freely\u2014use multiple language kernels within the same document and multiple independent sessions per kernel. Customize the display of code output\u2014easily modify what is displayed, and display it anywhere in the document using literate programming capabilities. Preview documents in VS Code or VSCodium with a dedicated extension supporting scroll sync. --- codebraid: jupyter: true --- ## Jupyter demo An example with Matplotlib: ```{.python .cb-nb} %matplotlib inline import matplotlib.pyplot as plt import numpy as np x = np.linspace(0, 10, 1001) plt.plot(x, np.cos(2*x)) plt.plot(x, 3*np.sin(x)) plt.grid() ```","title":"Codebraid \u2013 live code in Pandoc Markdown"},{"location":"#example-documents","text":"The documents below demonstrate Codebraid capabilities. For more advanced features, see the end of the Python and Rust examples. Python example [ Pandoc Markdown source ] [ raw HTML output ] Jupyter example [ Pandoc Markdown source ] [ raw HTML output ] Rust example [ Pandoc Markdown source ] [ raw HTML output ] Julia example [ Pandoc Markdown source ] [ raw HTML output ] R example [ Pandoc Markdown source ] [ raw HTML output ] Bash example [ Pandoc Markdown source ] [ raw HTML output ] JavaScript example [ Pandoc Markdown source ] [ raw HTML output ]","title":"Example documents"},{"location":"#publications","text":"\u201cCodebraid: Live Code in Pandoc Markdown\u201d , Geoffrey M. Poore, Proceedings of the 18th Python in Science Conference, 2019, 54-61. \u201cCodebraid Preview for VS Code: Pandoc Markdown Preview with Jupyter Kernels\u201d , Geoffrey M. Poore, Proceedings of the 21st Python in Science Conference, 2022, 105-109.","title":"Publications"},{"location":"#external-resources","text":"The new Codebraid website is currently under development. For additional Codebraid documentation, see the README . For additional Codebraid Preview documentation, see the README or the presentation for SciPy 2022 .","title":"External resources"},{"location":"getting_started/","text":"Getting Started Installation The codebraid command-line application is available from PyPI . It can be installed via the command line with pip3 install codebraid or pip install codebraid . It is also available from conda-forge . The development version from GitHub can also be installed manually. After downloading the development version, run python3 setup.py install or python setup.py install . Additional requirements: Pandoc \u2013 the latest version is usually best; minimum of v2.4+ but v2.17.1.1+ is recommended for commonmark_x . For Jupyter support, jupyter_client v6.1.0+ and language kernels . For YAML metadata support, ruamel.yaml (can be ruamel_yaml for Anaconda installations). Editor support There is an extension for VS Code and VSCodium . This provides a document preview with features like scroll sync between the Markdown source and the preview. The preview is generated with Pandoc itself, so all Pandoc extensions to Markdown syntax are fully supported. The extension also supports code execution, with visual indicators in the preview to show when cached code output is stale and when code is currently running. Code execution does not block the preview from updating; execution is decoupled from the preview process, so that the preview always remains live. For more information and examples, see the presentation for SciPy 2022 .","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"getting_started/#installation","text":"The codebraid command-line application is available from PyPI . It can be installed via the command line with pip3 install codebraid or pip install codebraid . It is also available from conda-forge . The development version from GitHub can also be installed manually. After downloading the development version, run python3 setup.py install or python setup.py install . Additional requirements: Pandoc \u2013 the latest version is usually best; minimum of v2.4+ but v2.17.1.1+ is recommended for commonmark_x . For Jupyter support, jupyter_client v6.1.0+ and language kernels . For YAML metadata support, ruamel.yaml (can be ruamel_yaml for Anaconda installations).","title":"Installation"},{"location":"getting_started/#editor-support","text":"There is an extension for VS Code and VSCodium . This provides a document preview with features like scroll sync between the Markdown source and the preview. The preview is generated with Pandoc itself, so all Pandoc extensions to Markdown syntax are fully supported. The extension also supports code execution, with visual indicators in the preview to show when cached code output is stale and when code is currently running. Code execution does not block the preview from updating; execution is decoupled from the preview process, so that the preview always remains live. For more information and examples, see the presentation for SciPy 2022 .","title":"Editor support"}]}